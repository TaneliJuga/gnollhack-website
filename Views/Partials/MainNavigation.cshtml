@inherits Umbraco.Web.Mvc.UmbracoViewPage
@{ 
    var home = Model.Root();
    Boolean asd = false;
}
@if (home.Children.Any())
{
    IEnumerable<dynamic> allChildren = home.Children;
    IEnumerable<dynamic> children2 = allChildren.Where(c => !(c.hideFromNavigation is bool) || c.hideFromNavigation == false);
    IEnumerable<dynamic> children = allChildren.Where(c => Model.Value<bool>("hideFromNavigation") == false);
    <nav class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <a class="navbar-brand" href="@home.Url">
                    <img alt="Hyv&auml;n mielen pelit" src="~/svg/logo2_white.svg" style="margin-top:9px;height:40px;" />
                </a>

                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>
            <div id="navbar" class="collapse navbar-collapse navbar-centered">
                <ul class="nav navbar-nav">
                    @foreach (IPublishedContent childPage in children)
                    {
                        if (childPage.Children.Any())
                        {
                            if (childPage.IsDocumentType("LandingPage"))
                            {
                                
                                <li class="dropdown@(childPage.IsAncestorOrSelf(Model) ? " selected" : "")">
                                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@childPage.Name <span class="caret"></span></a>
                                    @childPages(childPage.Children, childPage == children.Last())

                                </li>

                            }
                            else {
                                <li class="@(childPage.IsAncestorOrSelf(Model) ? "selected" : null)">
                                    <a href="@childPage.Url">@childPage.Name</a>
                                </li>
                            }

                        }
                        else
                        {
                            <li class="@(childPage.IsAncestorOrSelf(Model) ? "selected" : null)">
                                <a href="@childPage.Url">@childPage.Name</a>
                            </li>
                        }
                    }
                </ul>
            </div><!--/.nav-collapse -->
        </div>
    </nav>
}

@helper childPages(dynamic pages, bool isLast)
{
    @* Ensure that we have a collection of pages *@
    if (pages.Any())
    {
        <ul class="dropdown-menu centered-menu @(isLast ? "dropdown-right" : "")">
            @foreach (var page in pages)
            {
                <li>
                    <a href="@page.Url">@page.Name</a>
                </li>
            }
        </ul>

    }
}