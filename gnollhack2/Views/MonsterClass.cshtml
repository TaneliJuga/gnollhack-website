@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.MonsterClass>
@using ContentModels = Umbraco.Web.PublishedModels;
@{
    Layout = "archivePage.cshtml";
    String caption = Model.Name;
    IHtmlString description = Model.LongDescription;
    IEnumerable<IEnumerable<String>> content = new List<IEnumerable<String>>();
    IEnumerable<String> headers = new List<String>(new String[] {"Name", "Symbol", "Difficulty", "Base level"});
    this.ViewData.Add("caption", caption);
    this.ViewData.Add("headers", headers);
    this.ViewData.Add("description", description);

    var children = this.Model.Children();

}

@foreach (IPublishedContent monster in children)
{
    String symbol = monster.Value<String>("symbol", fallback: Fallback.To(Fallback.Ancestors));
    String symbolColor = monster.Value<String>("symbolColor", fallback: Fallback.To(Fallback.Ancestors));

    content = content.Append(
        new List<String>(new String[] {
        "<a href=\"" + monster.Url + "\">" + monster.Name + "</a>",
        "<span class = \"letter\" style = \"color:#" + symbolColor + "\">" + symbol + "</span>",
        monster.Value<String>("difficulty"),
        monster.Value<String>("baseLevel"),
        }));
}

@{ 
    ViewData.Add("content", content);
}

@Html.Partial("Table")