@use "sass:math";
@use "sass:selector";
@use "sass:string";
@use "sass:list";
@use "../variables";
$border-size-m: 40px;
$border-size-s: 30px;

//configures how much the border-image will overlap (be on top of) the border-box.
//helps remove gaps between the border-image and the edges of the border-box.
$border-overlap-factor: 0.1;
//configures the minimum amount of pixels that the border-image will overlap the border-box.
$min-border-overlap: 3px;

$border-image_bronze: url(/media/b50fbr0r/gnollhack-icon-v10.png) 80 84 82 85 stretch;
$border-image_scroll: url(/media/clhdyisu/scroll_paper.png) 300 356 323 332 round;

$block-name: "block";

$list: null;

$block: 0;
$element: 0;
$modifier:  0;

$blocks: null;
$blocks-elements: null; 

$elements: null;
$element-modifiers: null;

$modifiers: null;

@mixin setBorder($border-image, $border-size, $remove-top: false, $remove-right: false, $remove-bottom: false, $remove-left: false) {
    @if($border-image) {
        border-image: $border-image;

        $positions: $remove-top, $remove-right, $remove-bottom, $remove-left;
        $borders: null;
        @each $remove-position in $positions {
            $borders: list.append($borders, if($remove-position, 0, $border-size));
        }

        border-width: $borders;
    }
}


@function getSelector($block: #{$block-name}, $element: null, $modifier: null){
    $selector: $block;
    $element: if($element, "__#{$element}", "");
    $modifier: if($modifier, "_#{$modifier}", "");
    @return "#{$block}#{$element}#{$modifier}";
}

.#{$block-name} {
    $blocks: list.join($blocks, &);

    text-align: center;
    border: solid transparent;
    font-size: 16px;
    font-family: variables.$writing-font;
    color: variables.$gold;
    // Background element
    // Sets the background of the block
    &__border-image-bg {
        $elements: list.join($elements, &);
        $blocks-elements
        margin: -3px;

        &_type {
            @extend #{&};

            &_wood {
                @extend #{&};
                background-image: url(/media/uv3juqsv/woodalbedo2.png);
                $modifier: $modifier+1;
            }

            &_scroll {
                @extend #{&};
                background-color: #efe4b3;
            }
        }

        $element: $element+1;
    }

    &__style {
        &_navbar {
        }
    }

    $block: $block+1;
}


/*@mixin addBemElement($block, $element: null, $modifier: null, $extends-base: false) {
    $selector: if($element, getSelector($block, $element, $modifier), getSelector($block: $block, $modifier: $modifier));
    $extendee: if($element, getSelector($block, $element), $block);

    @at-root #{$selector} {
        @if($extends-base) {
            @debug "#{$selector} extend #{$extendee}";
            @extend #{$extendee}
        }

        @content
    }
}

@mixin addElement($block, $element) {
    $selector: getSelector($block, $element);

    @at-root #{$selector} {
        @content
    }
}

@mixin addModifier() {
    $selector: getSelector(&, $element);

    @at-root #{$selector} {
        @content
    }
}*/

/*@include addBemElement(&, "bg", "wood", true) {
        background-image: url(/media/uv3juqsv/woodalbedo2.png);
    }*/
/*@include addBemElement(&, "bg", "scroll", true) {
        background-color: #efe4b3;
    }

    @include addBemElement(&, "position", "top") {
        border-top-width: 0px;
    }

    @include addBemElement(&, "style", "navbar") {
        @extend #{&};
        @include setBorder($border-image_bronze, $border-size-m, $remove-top: true);
    }*/